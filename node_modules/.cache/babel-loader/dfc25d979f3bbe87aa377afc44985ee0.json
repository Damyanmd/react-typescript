{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438\\\\Udemy code React\\\\27-React+TypeScript\\\\src\\\\components\\\\NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = () => {\n  _s();\n\n  const todoTextInputRef = useRef(null);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredText = todoTextInputRef.current.value;\n\n    if (enteredText.trim().length === 0) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n};\n\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["useRef","NewTodo","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length"],"sources":["C:/Users/User/OneDrive/Документи/Udemy code React/27-React+TypeScript/src/components/NewTodo.tsx"],"sourcesContent":["import { useRef } from \"react\"\r\n\r\nconst NewTodo = () => {\r\n    const todoTextInputRef = useRef<HTMLInputElement>(null)\r\n    const submitHandler = (event: React.FormEvent) =>{\r\n        event.preventDefault()\r\n        const enteredText = todoTextInputRef.current!.value\r\n        if (enteredText.trim().length === 0) {\r\n            return\r\n        }\r\n\r\n    }\r\n    return <form onSubmit={submitHandler}>\r\n        <label htmlFor=\"text\"></label>\r\n        <input type=\"text\" id=\"text\" ref={todoTextInputRef}></input>\r\n        <button>Add Todo</button>\r\n    </form>\r\n}\r\n\r\nexport default NewTodo"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAMC,gBAAgB,GAAGF,MAAM,CAAmB,IAAnB,CAA/B;;EACA,MAAMG,aAAa,GAAIC,KAAD,IAA2B;IAC7CA,KAAK,CAACC,cAAN;IACA,MAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAjB,CAA0BC,KAA9C;;IACA,IAAIF,WAAW,CAACG,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;MACjC;IACH;EAEJ,CAPD;;EAQA,oBAAO;IAAM,QAAQ,EAAEP,aAAhB;IAAA,wBACH;MAAO,OAAO,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAO,IAAI,EAAC,MAAZ;MAAmB,EAAE,EAAC,MAAtB;MAA6B,GAAG,EAAED;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFG,eAGH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAKH,CAfD;;GAAMD,O;;KAAAA,O;AAiBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}